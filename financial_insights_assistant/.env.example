# --- Credentials ---
# Tiingo API Key for mcp-trader
TIINGO_API_KEY=YOUR_TIINGO_API_KEY_HERE

# PostgreSQL Credentials (used by PostgreSQL container and postgres-mcp)
POSTGRES_USER=admin
POSTGRES_PASSWORD=admin_password
POSTGRES_DB=financial_data

# --- Service URLs & Ports (defaults, can be overridden in docker-compose for inter-container comms) ---
# These are primarily for reference or if services need to be aware of their own exposed ports.
# Docker Compose service discovery will be the primary way for inter-agent communication.

# postgres-mcp server URL (if our pg_interface_agent needs to call it)
# Example: POSTGRES_MCP_URL=http://postgres_mcp_server:8000
# (Assuming postgres_mcp_server is the service name in docker-compose and it runs on port 8000)

# mcp-trader server URL (if our fin_interface_agent needs to call it)
# Example: MCP_TRADER_URL=http://mcp_trader_server:8000
# (Assuming mcp_trader_server is the service name in docker-compose and it runs on port 8000)

# URLs for our custom A2A agents (for host_agent to connect to them)
# These will be defined using Docker service names in docker-compose context
# Example for host_agent's .env when running via docker-compose:
# PG_INTERFACE_AGENT_URL=http://pg_interface_agent_service:8001
# FIN_INTERFACE_AGENT_URL=http://fin_interface_agent_service:8002
# ANALYSIS_LOOP_AGENT_URL=http://analysis_loop_agent_service:8003

# Host Agent UI Port
# GRADIO_SERVER_PORT=8080

# --- Model Configuration (for Host Agent using ADK/Gemini) ---
# ROUTING_AGENT_MODEL=gemini-1.5-flash-latest
# GOOGLE_API_KEY=YOUR_GEMINI_API_KEY_IF_NEEDED_BY_ADK_DIRECTLY
# ADK_PROJECT_ID=YOUR_GCP_PROJECT_ID
# ADK_LOCATION=YOUR_GCP_LOCATION

# --- Analysis Loop Agent Configuration ---
ANALYSIS_LOOP_SLEEP_INTERVAL_SECONDS=60 # Sleep interval in seconds for the analysis loop
